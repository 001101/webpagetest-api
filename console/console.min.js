(function(){function g(){var b={};$('.options.active input:text[value!=""]').each(function(c,d){var a=$(d);a.val()&&(b[a.attr("data-key")]=a.val())});$(".options.active input:checked").each(function(c,a){b[$(a).val()]=!0});if(0<Object.keys(b).length)return b}function k(b,c,a,e){c=[l,"/",b,void 0!==c?"/"+c:"","?callback=?",a?"&"+$.param(a):""].join("");b=-1<["waterfall","screenshot"].indexOf(b);a=a||{};b=b&&!a.uri;!a.dryrun&&b?e(!0,c):$.ajax({url:c,dataType:"jsonp",success:e.bind(null,!1)})}function n(){var b,c,d="var WebPageTest = require('webpagetest');\n\nvar wpt = new WebPageTest('www.webpagetest.org', 'your_API_key');\n\nwpt.{method}({param}{options}function callback(err, data{info}) {\n  console.log(err || data);\n});",e=f[$("#commands").val()];if(e){if(b=g())c={},Object.keys(b).forEach(function(d){["common"].concat(e.options).forEach(function(e){e&&a[e][d]&&(c[a[e][d].name]=b[d])})});d=d.replace("{method}",e.name).replace("{param}",e.param?"'"+$("#param").val()+"', ":"").replace("{options}",c?JSON.stringify(c)+", ":"").replace("{info}",-1<e.name.indexOf("Image")?", info":"");$("#module").text(d)}}function p(){var b,a=[],d="$ webpagetest {command}{param}{options}",e=$("#commands").val(),m=f[e];m&&((b=g())&&Object.keys(b).forEach(function(e){a.push("--"+e);"boolean"!==typeof b[e]&&a.push(b[e])}),d=d.replace("{command}",e).replace("{param}",m.param?" "+$("#param").val():"").replace("{options}",b?" "+a.join(" "):""),$("#command-line").text(d))}function q(){var a,c,d=$("#commands").val();if(c=f[d])c.param&&(a=$("#param").val()||c.param),c=g()||{},c.dryrun=!0,k(d,a,c,function(a,b){$("#url").text(b.url)})}function h(){n();p();q();var a,c,d=$("#commands").val();if(c=f[d])c.param&&(a=$("#param").val()||c.param,"test"===d&&(a=encodeURIComponent(a))),c=g(),a=[l,"/",d,void 0!==a?"/"+a:"",c?"?"+$.param(c):""].join(""),$("#proxy").text(a)}var a={common:{server:{name:"server",key:"s",param:"server",info:"the WPT server URL [%s]"},dryrun:{name:"dryRun",key:"d",bool:!0,info:"just return the RESTful API URL"}},test:{location:{name:"location",key:"l",api:"location",param:"location",info:"location to test from"},runs:{name:"runs",key:"r",api:"runs",param:"number",info:"number of test runs [1]"},first:{name:"firstViewOnly",key:"f",api:"fvonly",bool:!0,info:"skip the Repeat View test"},label:{name:"label",key:"L",api:"label",param:"label",info:"label for the test"},"private":{name:"private",key:"p",api:"private",bool:!0,info:"keep the test hidden from the test log"},video:{name:"video",key:"v",api:"video",bool:!0,info:"capture video"},connectivity:{name:"connectivity",key:"y",api:"connectivity",param:"profile",info:"connectivity profile (DSL|FIOS|Dial|custom) [DSL]"},dom:{name:"domElement",key:"m",api:"domelement",param:"element",info:"DOM element to record for sub-measurement"},connections:{name:"connections",key:"c",api:"connections",param:"number",info:"override the number of concurrent connections"},onload:{name:"stopAtDocumentComplete",key:"i",api:"web10",bool:!0,info:"force the test to stop at window.onload"},sensitive:{name:"sensitive",key:"t",api:"sensitive",bool:!0,info:"discard script and http headers in the result"},block:{name:"block",key:"b",api:"block",param:"urls",array:!0,info:"space-delimited list of urls to block (substring match)"},login:{name:"login",key:"g",api:"login",param:"username",info:"username for authenticating tests (http authentication)"},password:{name:"password",key:"w",api:"password",param:"password",info:"password for authenticating tests (http authentication)"},authtype:{name:"authenticationType",key:"a",api:"authType",param:"type",info:"type of authentication: 0 = Basic, 1 = SNS [0]"},notify:{name:"notifyEmail",key:"n",api:"notify",param:"e-mail",info:"e-mail address to notify with the test results"},pingback:{name:"pingback",key:"B",api:"pingback",param:"url",info:'URL to ping when the test is complete (the test ID will be passed as an "id" parameter)'},bwdown:{name:"bandwidthDown",key:"D",api:"bwDown",param:"bandwidth",info:"download bandwidth in Kbps (used when specifying a custom connectivity profile)"},bwup:{name:"bandwidthUp",key:"U",api:"bwUp",param:"bandwidth",info:"upload bandwidth in Kbps (used when specifying a custom connectivity profile)"},latency:{name:"latency",key:"Y",api:"latency",param:"time",info:"first-hop Round Trip Time in ms (used when specifying a custom connectivity profile)"},plr:{name:"packetLossRate",key:"P",api:"plr",param:"percentage",info:"packet loss rate - percent of packets to drop (used when specifying a custom connectivity profile)"},tcpdump:{name:"tcpDump",key:"u",api:"tcpdump",bool:!0,info:"enable tcpdump capture"},noopt:{name:"disableOptimization",key:"z",api:"noopt",bool:!0,info:"disable optimization checks (for faster testing)"},noimages:{name:"disableScreenshot",key:"I",api:"noimages",bool:!0,info:"disable screen shot capturing"},noheaders:{name:"disableHTTPHeaders",key:"H",api:"noheaders",bool:!0,info:"disable saving of the http headers (as well as browser status messages and CPU utilization)"},full:{name:"fullResolutionScreenshot",key:"F",api:"pngss",bool:!0,info:"save a full-resolution version of the fully loaded screen shot as a PNG"},jpeg:{name:"jpegQuality",key:"j",api:"iq",param:"level",info:"jpeg compression level (30-100) for the screen shots and video capture"},noscript:{name:"disableJavaScript",key:"S",api:"noscript",bool:!0,info:"disable javascript (IE, Chrome, Firefox)"},ignoressl:{name:"ignoreSSL",key:"R",api:"ignoreSSL",bool:!0,info:"ignore SSL certificate errors, e.g. name mismatch, self-signed certificates, etc"},standards:{name:"disableCompatibilityView",key:"T",api:"standards",bool:!0,info:"forces all pages to load in standards mode (IE only)"},bodies:{name:"saveResponseBodies",key:"O",api:"bodies",bool:!0,info:"save response bodies for text resources"},keepua:{name:"keepOriginalUserAgent",key:"K",api:"keepua",bool:!0,info:"do not add PTST to the original browser User Agent string"},duration:{name:"minimumDuration",key:"N",api:"time",param:"seconds",info:"minimum test duration in seconds"},noads:{name:"blockAds",key:"A",api:"blockads",bool:!0,info:"block ads defined by adblockrules.org"},aft:{name:"aftRenderingTime",key:"E",api:"aft",bool:!0,info:"(experimental) measure above-the-fold rendering time"},spof:{name:"spof",key:"Z",api:"spof",param:"domains",array:!0,info:"space-delimited list of domains to simulate failure by re-routing to blackhole.webpagetest.org to silently drop all requests"},mobile:{name:"emulateMobile",key:"W",api:"mobile",bool:!0,info:"(experimental) emulate mobile browser: Chrome mobile user agent, 640x960 screen, 2x scaling and fixed viewport (Chrome only)"},timeline:{name:"timeline",key:"M",api:"timeline",bool:!0,info:"capture Developer Tools Timeline (Chrome only)"},netlog:{name:"netLog",key:"G",api:"netlog",bool:!0,info:"capture Network Log (Chrome only)"},spdy3:{name:"forceSpdy3",key:"C",api:"spdy3",bool:!0,info:"force SPDY version 3 (Chrome only)"},swrender:{name:"forceSoftwareRendering",key:"J",api:"swrender",bool:!0,info:"force software rendering, disable GPU acceleration (Chrome only)"},noparser:{name:"disableThreadedParser",key:"Q",api:"disableThreadedParser",bool:!0,info:"disable threaded HTML parser (Chrome only)"},spdynossl:{name:"spdyNoSSL",key:"q",api:"spdyNoSSL",bool:!0,info:"use SPDY without SSL (Chrome only)"},cmdline:{name:"commandLine",api:"cmdline",param:"switches",info:"use a list of custom command line switches (Chrome only)"},htmlbody:{name:"htmlBody",api:"htmlbody",bool:!0,info:"save the content of only the base HTML response"},continuous:{name:"continuousVideoCapture",api:"continuousVideo",bool:!0,info:"capture video continuously (unstable/experimental, may cause tests to fail)"},poll:{name:"pollResults",param:"interval",optional:!0,info:"poll for results after test is scheduled at every <interval> seconds [5]"},wait:{name:"waitResults",param:"hostname:port",optional:!0,info:"wait for test results informed by agent once complete listening on <hostname>:<port> [hostname:first port available above 8000]"},timeout:{name:"timeout",param:"seconds",info:"timeout for polling and waiting results [no timeout]"}},request:{request:{name:"requestId",key:"e",api:"r",param:"id",info:"echo request ID, useful to track asynchronous requests"}},run:{run:{name:"run",key:"r",param:"number",info:"which run number on a multiple runs test [1]"},cached:{name:"repeatView",key:"c",bool:!0,info:"get the Repeat View (cached view) instead of default First View (primed cache)"}},image:{thumbnail:{name:"thumbnail",key:"t",bool:!0,info:"get the thumbnail of actual image"},uri:{name:"dataURI",key:"u",bool:!0,info:"return the base64 string representation (inline) of actual image"}},screenshot:{full:{name:"fullResolution",key:"f",bool:!0,info:"get full resolution screenshot in PNG format if available"},render:{name:"startRender",key:"n",bool:!0,info:"get the page screenshot at the Start Render point (i.e.: when something was first displayed on screen)"},complete:{name:"documentComplete",key:"p",bool:!0,info:"get the page screenshot at the Document Complete point (i.e.: when window.onload was fired)"}},results:{breakdown:{name:"breakDown",key:"b",api:"breakdown",bool:!0,info:"include the breakdown of requests and bytes by mime type"},domains:{name:"domains",key:"D",api:"domains",bool:!0,info:"include the breakdown of requests and bytes by domain"},pagespeed:{name:"pageSpeed",key:"p",api:"pagespeed",bool:!0,info:"include the PageSpeed score in the response (may be slower)"},requests:{name:"requests",key:"R",api:"requests",bool:!0,info:"include the request data in the response (slower and results in much larger responses)"},median:{name:"medianMetric",key:"m",api:"medianMetric",param:"metric",info:"set the metric used to calculate median for multiple runs tests [loadTime]"},specs:{name:"specs",key:"S",param:"json_or_file",info:"set the specs for performance test suite"},reporter:{name:"reporter",key:"r",param:"name",info:"set performance test suite reporter output: [dot]|spec|tap|xunit|list|progress|min|nyan|landing|json|doc|markdown|teamcity",valid:/^(?:dot|spec|tap|xunit|list|progress|min|nyan|landing|json|doc|markdown|teamcity)$/}},waterfall:{type:{name:"chartType",api:"type",key:"T",param:"chart",info:"set the chart type: waterfall or connection [waterfall]"},mime:{name:"colorByMime",api:"mime",key:"M",bool:!0,info:"set chart coloring by MIME type [false]"},width:{name:"chartWidth",api:"width",key:"w",param:"px",info:"chart image width in px (300-2000) [930]"},max:{name:"maxTime",api:"max",key:"m",param:"seconds",info:"set maximum time in seconds [automatic]"},requests:{name:"requests",api:"requests",key:"R",param:"items",info:"filter requests (e.g.:1,2,3,4-9,8) [all]"},nocpu:{name:"noCPU",api:"cpu",key:"C",bool:!0,invert:!0,info:"hide CPU utilization [false]"},nobandwidth:{name:"noBandwidth",api:"bw",key:"b",bool:!0,invert:!0,info:"hide bandwidth utilization [false]"},noellipsis:{name:"noEllipsis",api:"dots",key:"i",bool:!0,invert:!0,info:"hide ellipsis (...) for missing items [false]"},nolabels:{name:"noLabels",api:"labels",key:"l",bool:!0,invert:!0,info:"hide labels for requests (URL) [false]"}},apikey:{key:{name:"key",key:"k",api:"k",param:"api_key",info:"API key (if assigned). Contact the WebPageTest server administrator for a key if required"}},video:{end:{name:"comparisonEndPoint",key:"e",api:"end",param:"end_point",info:"frame comparison end point: [visual]=visually complete | all=last change | doc=document complete | full=fully loaded",valid:/^(?:visual|all|doc|full)$/}}},f={status:{name:"getTestStatus",param:"id",options:[a.request],info:"check test status"},results:{name:"getTestResults",param:"id",options:[a.results,a.request],info:"get test results"},locations:{name:"getLocations",options:[a.request],info:"list locations and the number of pending tests"},testers:{name:"getTesters",options:[a.request],info:"list testers status and details"},test:{name:"runTest",param:"url_or_script",options:[a.apikey,a.test,a.request,a.results],info:"run test",nokey:[a.results]},cancel:{name:"cancelTest",param:"id",options:[a.apikey],info:"cancel running/pending test"},har:{name:"getHARData",param:"id",info:"get the HTTPS Archive (HAR) from test"},pagespeed:{name:"getPageSpeedData",param:"id",options:[a.run],info:"get the Google Page Speed results (if available) from test"},utilization:{name:"getUtilizationData",param:"id",options:[a.run],info:"get the CPU, bandwidth and memory utilization data from test"},request:{name:"getRequestData",param:"id",options:[a.run],info:"get the request data from test"},timeline:{name:"getTimelineData",param:"id",options:[a.run],info:"get the Chrome Developer Tools Timeline data (if available) from test"},netlog:{name:"getNetLogData",param:"id",options:[a.run],info:"get the Chrome Developer Tools Net log data (if available) from test"},console:{name:"getConsoleLogData",param:"id",options:[a.run],info:"get the browser console log data (if available) from test"},testinfo:{name:"getTestInfo",param:"id",info:"get test request info/details"},history:{name:"getHistory",param:"days",optional:!0,info:"get history of previously run tests"},googlecsi:{name:"getGoogleCsiData",param:"id",options:[a.run],info:"get Google CSI data (Client Side Instrumentation)"},waterfall:{name:"getWaterfallImage",param:"id",options:[a.run,a.image,a.waterfall],info:"get the waterfall PNG image"},screenshot:{name:"getScreenshotImage",param:"id",options:[a.run,a.image,a.screenshot],info:"get the fully loaded page screenshot in JPG format (PNG if in full resolution)"},video:{name:"createVideo",param:"tests",options:[a.video],info:"create a video from <tests> (comma separated test ids)"},player:{name:"getEmbedVideoPlayer",param:"id",info:"get a html5 player for a video <id>"}},l="http://webpagetest.aws.af.cm";Object.keys(a).forEach(function(b){var c=document.createDocumentFragment(),d=a[b];Object.keys(d).sort(function(a,b){return d[a].bool&&!d[b].bool?-1:a<b?-1:1}).forEach(function(a){var b=d[a];b.bool?$(c).append($('<label class="checkbox inline span1 opt">').attr("title",b.info).html('<input type="checkbox" value="'+a+'">'+a)):$(c).append($('<div class="input-prepend inline opt"/>').attr("title",b.info).append($('<span class="add-on"/>').text(a)).append($('<input type="text" class="span2">').attr("data-key",a)))});$("#opt-"+b).append($(c))});$("#tab-options .opt").tooltip({delay:{show:500,hide:100}});$("#commands").on("change",function(a){(a=f[$(a.target).val()])?(a.param?$("#param").attr("placeholder",a.param).show():$("#param").hide(),$(".options.active").removeClass("active"),["common"].concat(a.options).forEach(function(a){a&&$("#opt-"+a).addClass("active")}),$("#command-info").text(a.info),h()):($("#param").hide(),$("#command-info").text("Select a command above"))});$("#param").on("input",function(a){h()});$("#tab-options").on("change",function(a){h()});$("#form").on("submit",function(a){var c,d=$("#commands").val(),e=f[d];e&&(a.preventDefault(),e.param&&(c=$("#param").val()||e.param),$("#output").text("running..."),$('.nav-tabs a[href="#tab-output"]').click(),k(d,c,g(),function(a,b){a?($("#image").attr("src",b).show(),$("#output").hide()):(b=b&&JSON.stringify(b,null,2)||"",$("#image").hide(),$("#output").text(b).show())}))})})();
